1. Nilesh Gupta

2. 
#include <stdio.h>
#include <string.h>

int main(){
    char i;
    char *messagePtr = "HELLOWORLD!";
    for (i = 0; i < strlen(messagePtr); i++){
        printf("%c\n ", messagePtr[i]);
    }
}

3. I think the value of the dereference operation *messagePtr is "H", as the pointer points to the first char in the string.

4. My hypothesis was correct and "H" was printed

5. 
#include <stdio.h>
#include <string.h>

int main(){
    char i;
    char *messagePtr = "HELLOWORLD!";
    for (i = 0; i < strlen(messagePtr); i++){
        printf("%c\n", *(messagePtr + i));
    }
}

6. 
#include <stdio.h>
#include <string.h>

int main() {
    int i = 0; 
    char *messagePtr = "HELLOWORLD!";
    while(messagePtr[i] != '\0') {
        printf("%c\n", *(messagePtr + i));
        i++;
    }
    return 0;
}

7.
#include <stdio.h>
#include <string.h>

void printReverse(char* string) {
    int length = 0;
    while (string[length] != '\0') {
        length++;
    }
    for (int i = length - 1; i >= 0; i--) {
        printf("%c\n", string[i]);  
    }
}
int main() {
    char *messagePtr = "HELLOWORLD!";
    printReverse(messagePtr);  
    return 0;
}

8.
char* reverseString(char* input) {
    int length = 0;
    while (input[length] != '\0') {
        length++;
    }
    char* output = (char*)malloc(length + 1);
    if (output == NULL) { 
        return NULL;
    }
    for (int i = 0; i < length; i++) {
        output[i] = input[length - 1 - i];
    }
    output[length] = '\0';
    return output;
}

